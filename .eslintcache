[{"/Applications/MAMP/htdocs/100-my_projects/02-editable-user-account-panel/editable-user-account-panel/src/index.js":"1","/Applications/MAMP/htdocs/100-my_projects/02-editable-user-account-panel/editable-user-account-panel/src/reportWebVitals.js":"2","/Applications/MAMP/htdocs/100-my_projects/02-editable-user-account-panel/editable-user-account-panel/src/App.js":"3"},{"size":499,"mtime":1609036959678,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608971396693,"results":"6","hashOfConfig":"5"},{"size":2467,"mtime":1609040012580,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1kkx6ti",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"/Applications/MAMP/htdocs/100-my_projects/02-editable-user-account-panel/editable-user-account-panel/src/index.js",[],["17","18"],"/Applications/MAMP/htdocs/100-my_projects/02-editable-user-account-panel/editable-user-account-panel/src/reportWebVitals.js",[],["19","20"],"/Applications/MAMP/htdocs/100-my_projects/02-editable-user-account-panel/editable-user-account-panel/src/App.js",["21"],"import React, { Component } from 'react';\nimport zxcvbn from 'zxcvbn';\n\n\n\n// const meter = document.getElementById('password-strength-meter');\n// const text = document.getElementById('password-strength-text');\n\nconst userInputsDom = {\n  fname: document.getElementById('fname'),\n  lname: document.getElementById('lname'),\n  email: document.getElementById('email'),\n  password: document.getElementById('password'),\n};\n\n// function updatePassword () {\n//   var val = userInputsDom.password.value;\n//   var result = zxcvbn(val);\n\n//   // Update the password strength meter\n//   meter.value = result.score;\n\n//   // Update the text indicator\n//   if (val !== \"\") {\n//     text.innerHTML = \"Strength: \" + strength[result.score]; \n//   } else {\n//     text.innerHTML = \"\";\n//   }\n// };\n\nclass App extends Component {\n\n  state = {\n    fname: '',\n    lname: '',\n    email: '',\n    password: ''\n  }\n\n  handlePasswordChange = (e) => {\n    this.setState({ password: e.target.value });\n\n    const strength = {\n      0: \"Worst\",\n      1: \"Bad\",\n      2: \"Weak\",\n      3: \"Good\",\n      4: \"Strong\"\n    };\n\n    const meter = document.getElementById('password-strength-meter');\n    const text = document.getElementById('password-strength-text');\n\n    let val = this.state.password;\n    let result = zxcvbn(val);\n\n    // Update the password strength meter\n    meter.value = result.score;\n\n    // Update the text indicator\n    if (val !== \"\") {\n      text.innerHTML = \"Strength: \" + strength[result.score]; \n    } else {\n      text.innerHTML = \"\";\n    }\n  };\n  \n  render () {\n    return (\n      <form action=\"\">\n        <label htmlFor=\"fname\">First name:</label>\n        <input \n          type=\"text\" \n          id=\"fname\" \n          name=\"fname\" />\n  \n        <label htmlFor=\"lname\">Last name:</label>\n        <input \n          type=\"text\" \n          id=\"lname\" \n          name=\"lname\" />\n  \n        <label htmlFor=\"email\">Email:</label>\n        <input \n          type=\"text\" \n          id=\"email\" \n          name=\"email\" />\n  \n        <label htmlFor=\"password\">Enter password</label>\n        <input \n          type=\"password\" \n          id=\"password\"\n          value={ this.state.password }\n          onChange={ this.handlePasswordChange } \n          required />\n\n        <meter \n          max=\"4\" \n          id=\"password-strength-meter\"></meter>\n\n        <p id=\"password-strength-text\"></p>\n        <p id=\"showPw\">Show password</p>\n      </form>\n    );\n  }\n  \n}\n\nexport default App;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"22","replacedBy":"26"},{"ruleId":"24","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":9,"column":7,"nodeType":"30","messageId":"31","endLine":9,"endColumn":20},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],["32"],["33"],"no-unused-vars","'userInputsDom' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]